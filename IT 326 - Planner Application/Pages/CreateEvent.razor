@using Radzen
@inject Radzen.DialogService DialogService
@using IT_326___Planner_Application.Models

<RadzenTemplateForm TItem="Event" Data="@model" Submit=@OnSubmit>
    <RadzenButton Click=@(args => OnClick("Primary button")) Text="Course" ButtonStyle="ButtonStyle.Primary" />
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Name" />
        </div>
        <div class="col">
            <RadzenTextBox @bind-Value="@model.Text" Name="Text" />
            <RadzenRequiredValidator Text="Title is required" Component="Text" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Start" />
        </div>
        <div class="col">
            <RadzenDatePicker @bind-Value="@model.Start" Name="Start" ShowTime="true" />
            <RadzenRequiredValidator Text="Start is required" Component="Start" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="End" />
        </div>
        <div class="col">
            <RadzenDatePicker Name="End" @bind-Value="@model.End" ShowTime="true" />
            <RadzenRequiredValidator Component="End" Text="End is required" />
        </div>
    </div>

    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Color" />
        </div>
        <div class="col">
            <RadzenTextBox @bind-Value="@model.color" Name="Color" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Save" />
        </div>
    </div>
</RadzenTemplateForm>
@code {
    [Parameter]
    public DateTime Start { get; set; }

    [Parameter]
    public DateTime End { get; set; }

    Event model = new Event();

    //Currently being tested
    void OnClick(string buttonName) {
        Event model = new Course();
    }

    //Sets the clicked times to the model data
    protected override void OnParametersSet()
    {
        model.Start = Start;
        model.End = End;
    }

    //On clicking "Save", close the box and return the new event object (model)
    void OnSubmit(Event model)
    {
        DialogService.Close(model);
    }
}